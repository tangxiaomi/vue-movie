{"remainingRequest":"/Users/mintang/Documents/vue-movie1/node_modules/babel-loader/lib/index.js!/Users/mintang/Documents/vue-movie1/node_modules/eslint-loader/index.js??ref--13-0!/Users/mintang/Documents/vue-movie1/src/utils/http.js","dependencies":[{"path":"/Users/mintang/Documents/vue-movie1/src/utils/http.js","mtime":1529902839741},{"path":"/Users/mintang/Documents/vue-movie1/node_modules/cache-loader/dist/cjs.js","mtime":1529737971000},{"path":"/Users/mintang/Documents/vue-movie1/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/mintang/Documents/vue-movie1/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["var _this = this;\n\nimport axios from 'axios';\naxios.defaults.timeout = 5000;\naxios.defaults.baseURL = ''; // http request 拦截器\n\naxios.interceptors.request.use(function (config) {\n  // const token = getCookie('名称');注意使用的时候需要引入cookie方法，推荐js-cookie\n  config.data = JSON.stringify(config.data);\n  config.headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); // http response 拦截器\n\naxios.interceptors.response.use(function (response) {\n  if (response.data.errCode === 2) {\n    _this.$router.push({\n      path: '/login',\n      // 从哪个页面跳转\n      querry: {\n        redirect: _this.$router.currentRoute.fullPath\n      }\n    });\n  }\n\n  return response;\n}, function (error) {\n  return Promise.reject(error);\n}); // 封装get方法\n\nexport function fetch(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    axios.get(url, {\n      params: params\n    }).then(function (response) {\n      resolve(response.data);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n} // 封装post请求\n\nexport function post(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    axios.post(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n} // 封装patch请求\n\nexport function patch(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    axios.patch(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n} // 封装put请求\n\nexport function put(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    axios.put(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n}",{"version":3,"sources":["src/utils/http.js"],"names":["axios","defaults","timeout","baseURL","interceptors","request","use","config","data","JSON","stringify","headers","Promise","reject","error","response","errCode","$router","push","path","querry","redirect","currentRoute","fullPath","fetch","url","params","resolve","get","then","catch","err","post","patch","put"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,MAAMC,QAAN,CAAeC,OAAf,GAAyB,IAAzB;AACAF,MAAMC,QAAN,CAAeE,OAAf,GAAyB,EAAzB,C,CAEA;;AACAH,MAAMI,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,kBAAU;AACR;AACAC,SAAOC,IAAP,GAAcC,KAAKC,SAAL,CAAeH,OAAOC,IAAtB,CAAd;AACAD,SAAOI,OAAP,GAAiB;AACf,oBAAgB;AADD,GAAjB;AAGA,SAAOJ,MAAP;AACD,CARH,EASE,iBAAS;AACP,SAAOK,QAAQC,MAAR,CAAeC,KAAf,CAAP;AACD,CAXH,E,CAcA;;AACAd,MAAMI,YAAN,CAAmBW,QAAnB,CAA4BT,GAA5B,CACE,oBAAY;AACV,MAAIS,SAASP,IAAT,CAAcQ,OAAd,KAA0B,CAA9B,EAAiC;AAC/B,UAAKC,OAAL,CAAaC,IAAb,CAAkB;AAChBC,YAAM,QADU;AAEhB;AACAC,cAAQ;AACNC,kBAAU,MAAKJ,OAAL,CAAaK,YAAb,CAA0BC;AAD9B;AAHQ,KAAlB;AAOD;;AACD,SAAOR,QAAP;AACD,CAZH,EAaE,iBAAS;AACP,SAAOH,QAAQC,MAAR,CAAeC,KAAf,CAAP;AACD,CAfH,E,CAkBA;;AACA,OAAO,SAASU,KAAT,CAAgBC,GAAhB,EAAkC;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AACvC,SAAO,IAAId,OAAJ,CAAY,UAACe,OAAD,EAAUd,MAAV,EAAqB;AACtCb,UAAM4B,GAAN,CAAUH,GAAV,EAAe;AACbC,cAAQA;AADK,KAAf,EAGGG,IAHH,CAGQ,oBAAY;AAChBF,cAAQZ,SAASP,IAAjB;AACD,KALH,EAMGsB,KANH,CAMS,eAAO;AACZjB,aAAOkB,GAAP;AACD,KARH;AASD,GAVM,CAAP;AAWD,C,CAED;;AACA,OAAO,SAASC,IAAT,CAAeP,GAAf,EAA+B;AAAA,MAAXjB,IAAW,uEAAJ,EAAI;AACpC,SAAO,IAAII,OAAJ,CAAY,UAACe,OAAD,EAAUd,MAAV,EAAqB;AACtCb,UAAMgC,IAAN,CAAWP,GAAX,EAAgBjB,IAAhB,EACGqB,IADH,CACQ,oBAAY;AAChBF,cAAQZ,SAASP,IAAjB;AACD,KAHH,EAGK,eAAO;AACRK,aAAOkB,GAAP;AACD,KALH;AAMD,GAPM,CAAP;AAQD,C,CAED;;AACA,OAAO,SAASE,KAAT,CAAgBR,GAAhB,EAAgC;AAAA,MAAXjB,IAAW,uEAAJ,EAAI;AACrC,SAAO,IAAII,OAAJ,CAAY,UAACe,OAAD,EAAUd,MAAV,EAAqB;AACtCb,UAAMiC,KAAN,CAAYR,GAAZ,EAAiBjB,IAAjB,EACGqB,IADH,CACQ,oBAAY;AAChBF,cAAQZ,SAASP,IAAjB;AACD,KAHH,EAGK,eAAO;AACRK,aAAOkB,GAAP;AACD,KALH;AAMD,GAPM,CAAP;AAQD,C,CAED;;AACA,OAAO,SAASG,GAAT,CAAcT,GAAd,EAA8B;AAAA,MAAXjB,IAAW,uEAAJ,EAAI;AACnC,SAAO,IAAII,OAAJ,CAAY,UAACe,OAAD,EAAUd,MAAV,EAAqB;AACtCb,UAAMkC,GAAN,CAAUT,GAAV,EAAejB,IAAf,EACGqB,IADH,CACQ,oBAAY;AAChBF,cAAQZ,SAASP,IAAjB;AACD,KAHH,EAGK,eAAO;AACRK,aAAOkB,GAAP;AACD,KALH;AAMD,GAPM,CAAP;AAQD","sourceRoot":"/Users/mintang/Documents/vue-movie1","sourcesContent":["import axios from 'axios'\n\naxios.defaults.timeout = 5000\naxios.defaults.baseURL = ''\n\n// http request 拦截器\naxios.interceptors.request.use(\n  config => {\n    // const token = getCookie('名称');注意使用的时候需要引入cookie方法，推荐js-cookie\n    config.data = JSON.stringify(config.data)\n    config.headers = {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n    return config\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\n// http response 拦截器\naxios.interceptors.response.use(\n  response => {\n    if (response.data.errCode === 2) {\n      this.$router.push({\n        path: '/login',\n        // 从哪个页面跳转\n        querry: {\n          redirect: this.$router.currentRoute.fullPath\n        }\n      })\n    }\n    return response\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\n// 封装get方法\nexport function fetch (url, params = {}) {\n  return new Promise((resolve, reject) => {\n    axios.get(url, {\n      params: params\n    })\n      .then(response => {\n        resolve(response.data)\n      })\n      .catch(err => {\n        reject(err)\n      })\n  })\n}\n\n// 封装post请求\nexport function post (url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.post(url, data)\n      .then(response => {\n        resolve(response.data)\n      }, err => {\n        reject(err)\n      })\n  })\n}\n\n// 封装patch请求\nexport function patch (url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.patch(url, data)\n      .then(response => {\n        resolve(response.data)\n      }, err => {\n        reject(err)\n      })\n  })\n}\n\n// 封装put请求\nexport function put (url, data = {}) {\n  return new Promise((resolve, reject) => {\n    axios.put(url, data)\n      .then(response => {\n        resolve(response.data)\n      }, err => {\n        reject(err)\n      })\n  })\n}\n"]}]}